[35m[1mConsolidate compiler generated dependencies of target ControlMotor[0m
[ 50%] [32mBuilding CXX object CMakeFiles/ControlMotor.dir/src/ControlMotor.cpp.o[0m
[01m[K/home/ubuntu/Desktop/AK8064_ws_Jun/src/motor_driver/src/ControlMotor.cpp:[m[K In constructor â€˜[01m[KMotorControlNode::MotorControlNode()[m[Kâ€™:
[01m[K/home/ubuntu/Desktop/AK8064_ws_Jun/src/motor_driver/src/ControlMotor.cpp:1173:31:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::vector<std::unique_ptr<IMotorController> >::push_back(std::_MakeUniq<MotorController>::__single_object)[m[Kâ€™
 1173 |         [01;31m[Kcontrollers_.push_back(std::make_unique<MotorController>([m[K
      |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 1174 | [01;31m[K            0x68, can_, this, "/motor1_control_node"))[m[K;
      |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/11/vector:67[m[K,
                 from [01m[K/usr/include/c++/11/functional:62[m[K,
                 from [01m[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13[m[K,
                 from [01m[K/usr/include/c++/11/algorithm:74[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:18[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/home/ubuntu/Desktop/AK8064_ws_Jun/src/motor_driver/src/ControlMotor.cpp:950[m[K:
[01m[K/usr/include/c++/11/bits/stl_vector.h:1187:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::unique_ptr<IMotorController>; _Alloc = std::allocator<std::unique_ptr<IMotorController> >; std::vector<_Tp, _Alloc>::value_type = std::unique_ptr<IMotorController>][m[Kâ€™
 1187 |       [01;36m[Kpush_back[m[K(const value_type& __x)
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/stl_vector.h:1187:35:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_MakeUniq<MotorController>::__single_object[m[Kâ€™ {aka â€˜[01m[Kstd::unique_ptr<MotorController, std::default_delete<MotorController> >[m[Kâ€™} to â€˜[01m[Kconst value_type&[m[Kâ€™ {aka â€˜[01m[Kconst std::unique_ptr<IMotorController>&[m[Kâ€™}
 1187 |       push_back([01;36m[Kconst value_type& __x[m[K)
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/11/bits/stl_vector.h:1203:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::unique_ptr<IMotorController>; _Alloc = std::allocator<std::unique_ptr<IMotorController> >; std::vector<_Tp, _Alloc>::value_type = std::unique_ptr<IMotorController>][m[Kâ€™
 1203 |       [01;36m[Kpush_back[m[K(value_type&& __x)
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/stl_vector.h:1203:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_MakeUniq<MotorController>::__single_object[m[Kâ€™ {aka â€˜[01m[Kstd::unique_ptr<MotorController, std::default_delete<MotorController> >[m[Kâ€™} to â€˜[01m[Kstd::vector<std::unique_ptr<IMotorController> >::value_type&&[m[Kâ€™ {aka â€˜[01m[Kstd::unique_ptr<IMotorController>&&[m[Kâ€™}
 1203 |       push_back([01;36m[Kvalue_type&& __x[m[K)
      |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[01m[K/home/ubuntu/Desktop/AK8064_ws_Jun/src/motor_driver/src/ControlMotor.cpp:1175:31:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::vector<std::unique_ptr<IMotorController> >::push_back(std::_MakeUniq<MotorController>::__single_object)[m[Kâ€™
 1175 |         [01;31m[Kcontrollers_.push_back(std::make_unique<MotorController>([m[K
      |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 1176 | [01;31m[K            0x69, can_, this, "/motor2_control_node"))[m[K;
      |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/11/vector:67[m[K,
                 from [01m[K/usr/include/c++/11/functional:62[m[K,
                 from [01m[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13[m[K,
                 from [01m[K/usr/include/c++/11/algorithm:74[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:18[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/home/ubuntu/Desktop/AK8064_ws_Jun/src/motor_driver/src/ControlMotor.cpp:950[m[K:
[01m[K/usr/include/c++/11/bits/stl_vector.h:1187:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::unique_ptr<IMotorController>; _Alloc = std::allocator<std::unique_ptr<IMotorController> >; std::vector<_Tp, _Alloc>::value_type = std::unique_ptr<IMotorController>][m[Kâ€™
 1187 |       [01;36m[Kpush_back[m[K(const value_type& __x)
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/stl_vector.h:1187:35:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_MakeUniq<MotorController>::__single_object[m[Kâ€™ {aka â€˜[01m[Kstd::unique_ptr<MotorController, std::default_delete<MotorController> >[m[Kâ€™} to â€˜[01m[Kconst value_type&[m[Kâ€™ {aka â€˜[01m[Kconst std::unique_ptr<IMotorController>&[m[Kâ€™}
 1187 |       push_back([01;36m[Kconst value_type& __x[m[K)
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/11/bits/stl_vector.h:1203:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::unique_ptr<IMotorController>; _Alloc = std::allocator<std::unique_ptr<IMotorController> >; std::vector<_Tp, _Alloc>::value_type = std::unique_ptr<IMotorController>][m[Kâ€™
 1203 |       [01;36m[Kpush_back[m[K(value_type&& __x)
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/stl_vector.h:1203:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_MakeUniq<MotorController>::__single_object[m[Kâ€™ {aka â€˜[01m[Kstd::unique_ptr<MotorController, std::default_delete<MotorController> >[m[Kâ€™} to â€˜[01m[Kstd::vector<std::unique_ptr<IMotorController> >::value_type&&[m[Kâ€™ {aka â€˜[01m[Kstd::unique_ptr<IMotorController>&&[m[Kâ€™}
 1203 |       push_back([01;36m[Kvalue_type&& __x[m[K)
      |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[01m[K/home/ubuntu/Desktop/AK8064_ws_Jun/src/motor_driver/src/ControlMotor.cpp:[m[K In member function â€˜[01m[Kvoid MotorControlNode::controlLoop()[m[Kâ€™:
[01m[K/home/ubuntu/Desktop/AK8064_ws_Jun/src/motor_driver/src/ControlMotor.cpp:1224:59:[m[K [01;31m[Kerror: [m[Kincomplete type â€˜[01m[KMotorController[m[Kâ€™ used in nested name specifier
 1224 |                         data.velocity *= MotorController::[01;31m[KVELOCITY_CONVERSION_FACTOR[m[K;
      |                                                           [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
gmake[2]: *** [CMakeFiles/ControlMotor.dir/build.make:76: CMakeFiles/ControlMotor.dir/src/ControlMotor.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/ControlMotor.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
